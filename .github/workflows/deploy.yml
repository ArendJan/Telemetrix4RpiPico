name: Deploy new version

# Only deploy when a new tag is pushed
on: [push, pull_request]
          
# Must match the project() name in CMakeLists.txt
env:
    APP_NAME: Telemetrix4RpiPico
    
# Allow this workflow to write back to the repository
permissions:
    contents: write
    
# Build binary and send to releases
jobs:
    build-deploy:
        runs-on: ubuntu-latest
        name: Build and deploy
        steps:
        
          - name: Check out this repository
            uses: actions/checkout@v3
          - name: Set up Docker Buildx
            id: buildx
            uses: docker/setup-buildx-action@v1 

          - name: Cache register
            uses: actions/cache@v3
            with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}

          - name: Build Docker image
            uses: docker/build-push-action@v5
            with:
                context: ./
                file: ./Dockerfile
                builder: ${{ steps.buildx.outputs.name }}
                load: true
                tags: pico-builder-container:latest
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
            
          - name: Build
            run: docker run -v ./:/project/src/ pico-builder-container
            
        #   - name: Copy out .uf2 file
        #     run: docker cp pico-builder-container:/project/src/build/${APP_NAME}.uf2 ./${APP_NAME}.uf2
          - name: Copy uf2 file
            run: cp ./build2/${APP_NAME}.uf2 ./

          - name: Put environment variable into the env context
            run: echo "app_name=$APP_NAME" >> $GITHUB_ENV
          - name: Archive production artifacts
            uses: actions/upload-artifact@v3
            with:
              name: dist
              path: |
                ${app_name}.uf2
            
        #   - name: Push to release
        #     uses: softprops/action-gh-release@v1
        #     if: startsWith(github.ref, 'refs/tags/')
        #     with:
        #         files: ${{ env.app_name }}.uf2
        #         body_path: CHANGELOG.md